plugins {
    id 'java'
    id 'scala'
    id 'jacoco'
    id 'org.scoverage' version '3.0.0'
    id 'org.sonarqube' version "2.7"
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group 'com.mdstech.learn'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    scalaVersion = "2.12"
    akkaVersion = "2.5.22"
    akkaHttpVersion = "10.1.8"
}

dependencies {
    compile "com.typesafe.akka:akka-actor_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-stream_${scalaVersion}:${akkaVersion}"
    compile "com.typesafe.akka:akka-http_${scalaVersion}:${akkaHttpVersion}"
    compile "com.typesafe.akka:akka-http-spray-json_${scalaVersion}:${akkaHttpVersion}"
    compile "com.typesafe.akka:akka-cluster_${scalaVersion}:${akkaVersion}"
    compile "org.slf4j:slf4j-simple:1.7.25"
    compile "com.h2database:h2:1.4.197"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.scalatest:scalatest_${scalaVersion}:3.0.7"
    testCompile "com.typesafe.akka:akka-http-testkit_${scalaVersion}:${akkaHttpVersion}"
    testCompile "com.typesafe.akka:akka-stream-testkit_${scalaVersion}:${akkaVersion}"
    scoverage "org.scoverage:scalac-scoverage-plugin_2.12:1.3.1",
            "org.scoverage:scalac-scoverage-runtime_2.12:1.3.1"

}

// Scapegoat configuration.
configurations {
    scalaCompilerPlugin
}

dependencies {
    compile 'com.sksamuel.scapegoat:scalac-scapegoat-plugin_2.12:1.3.8' // to prevent https://github.com/sksamuel/scapegoat/issues/98
    scalaCompilerPlugin "com.sksamuel.scapegoat:scalac-scapegoat-plugin_2.12:1.3.8"
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = [
            "-Xplugin:" + configurations.scalaCompilerPlugin.asPath,
            "-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat",
            "-P:scapegoat:reports:xml"
    ]
}

run {
    mainClassName = 'com.mdstech.sample.Application'
    standardInput = System.in
}

jar {
    manifest {
        attributes "Main-Class": "com.mdstech.sample.Application"
        attributes "Build-Version": version
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    archiveName 'fat.jar'
}

shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
        resource = 'reference.conf'
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/scala, src/main/java"
        property "sonar.tests", "src/test/scala, src/test/java"
        property "sonar.scala.version", "2.12"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.core.codeCoveragePlugin", "scoverage"

        property "sonar.projectName", "scala-akka-http-ms"
        property "sonar.host.url", "http://${rootProject.properties['sonarHostName']}:9000"
        property "sonar.login", "${rootProject.properties['sonarWebUserName']}"
        property "sonar.password", "${rootProject.properties['sonarWebPassword']}"

        property "sonar.jacoco.reportPath", "build/jacoco/test.exec"
        property "sonar.junit.reportPaths", "build/test-results/test"
        property "sonar.scala.coverage.reportPaths", "build/reports/scoverage/scoverage.xml"
        property "sonar.scala.scapegoat.reportPath", "build/reports/scapegoat/scapegoat.xml"
    }
}